Phase1: Scanning the expression

1.1 If the extracted item is an operand, push it to operandStack.
1.2 If the extracted item is a + or – operator, process all the operators at the top of operatorStack and push the extracted operator to operatorStack.
1.3 If the extracted item is a * or / operator, process * or /operators at the top of operatorStack and push the extracted operator to operatorStack.
1.4 If the extracted item is a ( symbol, push it to operatorStack.
1.5 If the extracted item is a ) symbol, repeatedly process the operators from the top of operatorStack until seeing the ( symbol on the stack.

Phase2: Clearing the stack

Repeatedly process the operators from the top of operatorStack until operatorStack is empty. 
